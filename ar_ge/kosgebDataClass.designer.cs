#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KobiDestek
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="kosgeb")]
	public partial class argeDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAr_Ge(Ar_Ge instance);
    partial void UpdateAr_Ge(Ar_Ge instance);
    partial void DeleteAr_Ge(Ar_Ge instance);
    partial void Insertendustri(endustri instance);
    partial void Updateendustri(endustri instance);
    partial void Deleteendustri(endustri instance);
    partial void InsertargePersonel(argePersonel instance);
    partial void UpdateargePersonel(argePersonel instance);
    partial void DeleteargePersonel(argePersonel instance);
    partial void InsertargeMakine(argeMakine instance);
    partial void UpdateargeMakine(argeMakine instance);
    partial void DeleteargeMakine(argeMakine instance);
    partial void InsertendustriPersonel(endustriPersonel instance);
    partial void UpdateendustriPersonel(endustriPersonel instance);
    partial void DeleteendustriPersonel(endustriPersonel instance);
    partial void InsertendustriMakine(endustriMakine instance);
    partial void UpdateendustriMakine(endustriMakine instance);
    partial void DeleteendustriMakine(endustriMakine instance);
    partial void InsertargeFuar(argeFuar instance);
    partial void UpdateargeFuar(argeFuar instance);
    partial void DeleteargeFuar(argeFuar instance);
    #endregion
		
		public argeDataClassDataContext() : 
				base(global::KobiDestek.Properties.Settings.Default.kosgebConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public argeDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public argeDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public argeDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public argeDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ar_Ge> Ar_Ges
		{
			get
			{
				return this.GetTable<Ar_Ge>();
			}
		}
		
		public System.Data.Linq.Table<endustri> endustris
		{
			get
			{
				return this.GetTable<endustri>();
			}
		}
		
		public System.Data.Linq.Table<argePersonel> argePersonels
		{
			get
			{
				return this.GetTable<argePersonel>();
			}
		}
		
		public System.Data.Linq.Table<argeMakine> argeMakines
		{
			get
			{
				return this.GetTable<argeMakine>();
			}
		}
		
		public System.Data.Linq.Table<endustriPersonel> endustriPersonels
		{
			get
			{
				return this.GetTable<endustriPersonel>();
			}
		}
		
		public System.Data.Linq.Table<endustriMakine> endustriMakines
		{
			get
			{
				return this.GetTable<endustriMakine>();
			}
		}
		
		public System.Data.Linq.Table<argeFuar> argeFuars
		{
			get
			{
				return this.GetTable<argeFuar>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ar_Ge")]
	public partial class Ar_Ge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ustLimit;
		
		private string _oran;
		
		private string _maksMiktar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnustLimitChanging(string value);
    partial void OnustLimitChanged();
    partial void OnoranChanging(string value);
    partial void OnoranChanged();
    partial void OnmaksMiktarChanging(string value);
    partial void OnmaksMiktarChanged();
    #endregion
		
		public Ar_Ge()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ustLimit", DbType="NChar(10)")]
		public string ustLimit
		{
			get
			{
				return this._ustLimit;
			}
			set
			{
				if ((this._ustLimit != value))
				{
					this.OnustLimitChanging(value);
					this.SendPropertyChanging();
					this._ustLimit = value;
					this.SendPropertyChanged("ustLimit");
					this.OnustLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oran", DbType="NChar(10)")]
		public string oran
		{
			get
			{
				return this._oran;
			}
			set
			{
				if ((this._oran != value))
				{
					this.OnoranChanging(value);
					this.SendPropertyChanging();
					this._oran = value;
					this.SendPropertyChanged("oran");
					this.OnoranChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maksMiktar", DbType="NChar(10)")]
		public string maksMiktar
		{
			get
			{
				return this._maksMiktar;
			}
			set
			{
				if ((this._maksMiktar != value))
				{
					this.OnmaksMiktarChanging(value);
					this.SendPropertyChanging();
					this._maksMiktar = value;
					this.SendPropertyChanged("maksMiktar");
					this.OnmaksMiktarChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.endustri")]
	public partial class endustri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _ustLimit;
		
		private string _oran;
		
		private string _MaksMiktar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnustLimitChanging(string value);
    partial void OnustLimitChanged();
    partial void OnoranChanging(string value);
    partial void OnoranChanged();
    partial void OnMaksMiktarChanging(string value);
    partial void OnMaksMiktarChanged();
    #endregion
		
		public endustri()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ustLimit", DbType="NChar(10)")]
		public string ustLimit
		{
			get
			{
				return this._ustLimit;
			}
			set
			{
				if ((this._ustLimit != value))
				{
					this.OnustLimitChanging(value);
					this.SendPropertyChanging();
					this._ustLimit = value;
					this.SendPropertyChanged("ustLimit");
					this.OnustLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oran", DbType="NChar(10)")]
		public string oran
		{
			get
			{
				return this._oran;
			}
			set
			{
				if ((this._oran != value))
				{
					this.OnoranChanging(value);
					this.SendPropertyChanging();
					this._oran = value;
					this.SendPropertyChanged("oran");
					this.OnoranChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaksMiktar", DbType="NChar(10)")]
		public string MaksMiktar
		{
			get
			{
				return this._MaksMiktar;
			}
			set
			{
				if ((this._MaksMiktar != value))
				{
					this.OnMaksMiktarChanging(value);
					this.SendPropertyChanging();
					this._MaksMiktar = value;
					this.SendPropertyChanged("MaksMiktar");
					this.OnMaksMiktarChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.argePersonel")]
	public partial class argePersonel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonelID;
		
		private string _Type;
		
		private string _Amount;
		
		private string _TotalAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonelIDChanging(int value);
    partial void OnPersonelIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnTotalAmountChanging(string value);
    partial void OnTotalAmountChanged();
    #endregion
		
		public argePersonel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonelID
		{
			get
			{
				return this._PersonelID;
			}
			set
			{
				if ((this._PersonelID != value))
				{
					this.OnPersonelIDChanging(value);
					this.SendPropertyChanging();
					this._PersonelID = value;
					this.SendPropertyChanged("PersonelID");
					this.OnPersonelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(40)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NChar(10)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="NChar(10)")]
		public string TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.argeMakine")]
	public partial class argeMakine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MakineID;
		
		private string _hizName;
		
		private string _Type;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMakineIDChanging(int value);
    partial void OnMakineIDChanged();
    partial void OnhizNameChanging(string value);
    partial void OnhizNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public argeMakine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MakineID
		{
			get
			{
				return this._MakineID;
			}
			set
			{
				if ((this._MakineID != value))
				{
					this.OnMakineIDChanging(value);
					this.SendPropertyChanging();
					this._MakineID = value;
					this.SendPropertyChanged("MakineID");
					this.OnMakineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hizName", DbType="NChar(40)")]
		public string hizName
		{
			get
			{
				return this._hizName;
			}
			set
			{
				if ((this._hizName != value))
				{
					this.OnhizNameChanging(value);
					this.SendPropertyChanging();
					this._hizName = value;
					this.SendPropertyChanged("hizName");
					this.OnhizNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(40)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NChar(10)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.endustriPersonel")]
	public partial class endustriPersonel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonelID;
		
		private string _Type;
		
		private string _Amount;
		
		private string _TotalAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonelIDChanging(int value);
    partial void OnPersonelIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnTotalAmountChanging(string value);
    partial void OnTotalAmountChanged();
    #endregion
		
		public endustriPersonel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonelID
		{
			get
			{
				return this._PersonelID;
			}
			set
			{
				if ((this._PersonelID != value))
				{
					this.OnPersonelIDChanging(value);
					this.SendPropertyChanging();
					this._PersonelID = value;
					this.SendPropertyChanged("PersonelID");
					this.OnPersonelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(40)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NChar(10)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="NChar(10)")]
		public string TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.endustriMakine")]
	public partial class endustriMakine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MakineID;
		
		private string _hizName;
		
		private string _Type;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMakineIDChanging(int value);
    partial void OnMakineIDChanged();
    partial void OnhizNameChanging(string value);
    partial void OnhizNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public endustriMakine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MakineID
		{
			get
			{
				return this._MakineID;
			}
			set
			{
				if ((this._MakineID != value))
				{
					this.OnMakineIDChanging(value);
					this.SendPropertyChanging();
					this._MakineID = value;
					this.SendPropertyChanged("MakineID");
					this.OnMakineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hizName", DbType="NChar(40)")]
		public string hizName
		{
			get
			{
				return this._hizName;
			}
			set
			{
				if ((this._hizName != value))
				{
					this.OnhizNameChanging(value);
					this.SendPropertyChanging();
					this._hizName = value;
					this.SendPropertyChanged("hizName");
					this.OnhizNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(40)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NChar(10)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.argeFuar")]
	public partial class argeFuar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FuarId;
		
		private string _yurtIcDis;
		
		private string _Type;
		
		private string _fuarName;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFuarIdChanging(int value);
    partial void OnFuarIdChanged();
    partial void OnyurtIcDisChanging(string value);
    partial void OnyurtIcDisChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnfuarNameChanging(string value);
    partial void OnfuarNameChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public argeFuar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuarId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FuarId
		{
			get
			{
				return this._FuarId;
			}
			set
			{
				if ((this._FuarId != value))
				{
					this.OnFuarIdChanging(value);
					this.SendPropertyChanging();
					this._FuarId = value;
					this.SendPropertyChanged("FuarId");
					this.OnFuarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yurtIcDis", DbType="NChar(40)")]
		public string yurtIcDis
		{
			get
			{
				return this._yurtIcDis;
			}
			set
			{
				if ((this._yurtIcDis != value))
				{
					this.OnyurtIcDisChanging(value);
					this.SendPropertyChanging();
					this._yurtIcDis = value;
					this.SendPropertyChanged("yurtIcDis");
					this.OnyurtIcDisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(40)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fuarName", DbType="NChar(40)")]
		public string fuarName
		{
			get
			{
				return this._fuarName;
			}
			set
			{
				if ((this._fuarName != value))
				{
					this.OnfuarNameChanging(value);
					this.SendPropertyChanging();
					this._fuarName = value;
					this.SendPropertyChanged("fuarName");
					this.OnfuarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NChar(40)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
